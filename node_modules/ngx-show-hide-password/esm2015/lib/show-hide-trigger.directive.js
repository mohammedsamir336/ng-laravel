import { __decorate } from "tslib";
import { Directive, HostListener, Input, ErrorHandler } from '@angular/core';
import { ShowHideService } from './show-hide.service';
let ShowHideTriggerDirective = class ShowHideTriggerDirective {
    constructor(service, errorHandler) {
        this.service = service;
        this.errorHandler = errorHandler;
    }
    onClick() {
        if (this.showHideTrigger) {
            this.service.toggleShow(this.showHideTrigger);
        }
        else {
            this.errorHandler.handleError(new Error(`Status can not be changed without [id].`));
        }
    }
};
ShowHideTriggerDirective.ctorParameters = () => [
    { type: ShowHideService },
    { type: ErrorHandler }
];
__decorate([
    Input()
], ShowHideTriggerDirective.prototype, "showHideTrigger", void 0);
__decorate([
    HostListener('click')
], ShowHideTriggerDirective.prototype, "onClick", null);
ShowHideTriggerDirective = __decorate([
    Directive({
        selector: '[showHideTrigger]'
    })
], ShowHideTriggerDirective);
export { ShowHideTriggerDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvdy1oaWRlLXRyaWdnZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNob3ctaGlkZS1wYXNzd29yZC8iLCJzb3VyY2VzIjpbImxpYi9zaG93LWhpZGUtdHJpZ2dlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBS3RELElBQWEsd0JBQXdCLEdBQXJDLE1BQWEsd0JBQXdCO0lBR25DLFlBQW9CLE9BQXdCLEVBQVUsWUFBMEI7UUFBNUQsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUFHLENBQUM7SUFHcEYsT0FBTztRQUNMLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDL0M7YUFBTTtZQUNMLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLElBQUksS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUMsQ0FBQztTQUNyRjtJQUNILENBQUM7Q0FDRixDQUFBOztZQVY4QixlQUFlO1lBQXdCLFlBQVk7O0FBRnZFO0lBQVIsS0FBSyxFQUFFO2lFQUEwQjtBQUtsQztJQURDLFlBQVksQ0FBQyxPQUFPLENBQUM7dURBT3JCO0FBWlUsd0JBQXdCO0lBSHBDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxtQkFBbUI7S0FDOUIsQ0FBQztHQUNXLHdCQUF3QixDQWFwQztTQWJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCwgRXJyb3JIYW5kbGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaG93SGlkZVNlcnZpY2UgfSBmcm9tICcuL3Nob3ctaGlkZS5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Nob3dIaWRlVHJpZ2dlcl0nXG59KVxuZXhwb3J0IGNsYXNzIFNob3dIaWRlVHJpZ2dlckRpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIHNob3dIaWRlVHJpZ2dlcj86IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2U6IFNob3dIaWRlU2VydmljZSwgcHJpdmF0ZSBlcnJvckhhbmRsZXI6IEVycm9ySGFuZGxlcikge31cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycpXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuc2hvd0hpZGVUcmlnZ2VyKSB7XG4gICAgICB0aGlzLnNlcnZpY2UudG9nZ2xlU2hvdyh0aGlzLnNob3dIaWRlVHJpZ2dlcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXJyb3JIYW5kbGVyLmhhbmRsZUVycm9yKG5ldyBFcnJvcihgU3RhdHVzIGNhbiBub3QgYmUgY2hhbmdlZCB3aXRob3V0IFtpZF0uYCkpO1xuICAgIH1cbiAgfVxufVxuIl19